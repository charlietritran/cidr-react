{"version":3,"sources":["logo.svg","components/AppNavbar.jsx","components/Home.js","components/customer/CustomerList.jsx","components/customer/CustomerEdit.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","AppNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","toggle","bind","assertThisInitialized","setState","react_default","a","createElement","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","Component","Home","AppNavbar_AppNavbar","CustomerList","customers","remove","baseRestUrl","_this2","fetch","then","response","json","data","console","log","id","concat","method","headers","Accept","Content-Type","updatedCustomers","toConsumableArray","_this3","filter","i","_this4","_this$state","isLoading","customerList","map","customer","key","style","whiteSpace","firstName","lastName","email","dateOfBirth","ButtonGroup","Button","size","onClick","Container","fluid","Table","className","width","CustomerEdit","emptyItem","name","item","handleChange","handleSubmit","match","params","event","target","value","objectSpread","preventDefault","body","JSON","stringify","history","push","title","Form","onSubmit","FormGroup","Label","for","Input","type","onChange","autoComplete","withRouter","App","_useState","useState","_useState2","slicedToArray","useEffect","react_router_dom","basename","process","react_router","path","exact","component","reportWebVitals","onPerfEntry","Function","e","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b7607a1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, {Component} from 'react';\nimport {Navbar, NavbarBrand} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nexport default class AppNavbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isOpen: false};\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return <Navbar color=\"dark\" dark expand=\"md\">\n            <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\n            <NavbarBrand tag={Link} to=\"/customers\">Customers</NavbarBrand>\n        </Navbar>;\n    }\n}","import React, { Component } from 'react';\nimport '../App.css';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'reactstrap';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <AppNavbar/>\n                Hello!  Welcome to the world of applicaiton demo for spring-rest backend and react frontend.\n                {/** \n                                <Container fluid>\n                    <Button color=\"link\"><Link to=\"/clients\">Clients</Link></Button>\n                </Container>\n                 */}\n\n         \n            </div>\n        );\n    }\n}\nexport default Home;","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from '../AppNavbar';\nimport { Link } from 'react-router-dom';\n\n\nclass CustomerList extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { customers: [] };\n\t\tthis.remove = this.remove.bind(this);\n\t\tthis.baseRestUrl = 'http://localhost:8085/cidr-rest';\n\t}\n\n\t///////////////////////////////////////////////////////////\n\t//\n\t//  DID MOUNT\n\t//\n\t///////////////////////////////////////////////////////////\t\n\tcomponentDidMount() {\n\t\tfetch(this.baseRestUrl + '/customers')\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tthis.setState({ customers: data })\n\t\t\t});\n\t}\n\t\n\t///////////////////////////////////////////////////////////\n\t//\n\t//  REMOVE\n\t//\n\t///////////////////////////////////////////////////////////\t\n\tasync remove(id) {\n\t\tawait fetch(this.baseRestUrl + `/customers/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t}).then(() => {\n\t\t\tlet updatedCustomers = [...this.state.customers].filter(i => i.id !== id);\n\t\t\tthis.setState({ customers: updatedCustomers });\n\t\t});\n\t}\n\t\n\t///////////////////////////////////////////////////////////\n\t//\n\t//  RENDER\n\t//\n\t///////////////////////////////////////////////////////////\t\n\trender() {\n\t\tconst { customers, isLoading } = this.state;\n\n\t\tif (isLoading) {\n\t\t\treturn <p>Loading...</p>;\n\t\t}\n\n\t\tconst customerList = customers.map(customer => {\n\n\t\t\treturn <tr key={customer.id}>\n\t\t\t\t<td style={{ whiteSpace: 'nowrap' }}>{customer.firstName}</td>\n\t\t\t\t<td style={{ whiteSpace: 'nowrap' }}>{customer.lastName}</td>\n\t\t\t\t<td>{customer.email}</td>\n\t\t\t\t<td style={{ whiteSpace: 'nowrap' }}>{customer.dateOfBirth}</td>\n\t\t\t\t<td>\n\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t<Button size=\"sm\" color=\"primary\" tag={Link} to={\"/customers/\" + customer.id}>Edit</Button>\n\t\t\t\t\t\t {\" \"}\n\t\t\t\t\t\t<Button size=\"sm\" color=\"danger\" onClick={() => this.remove(customer.id)}>Delete</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t});\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<AppNavbar />\n\t\t\t\t<Container fluid>\n\n\t\t\t\t\t<h3>Customers</h3>\n\t\t\t\t\t<Table className=\"mt-4\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th width=\"30%\">First Name</th>\n\t\t\t\t\t\t\t\t<th width=\"30%\">Last Name</th>\n\t\t\t\t\t\t\t\t<th width=\"30%\">Email</th>\n\t\t\t\t\t\t\t\t<th width=\"30%\">Date Of Birth</th>\n\t\t\t\t\t\t\t\t<th width=\"40%\">Actions</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{ customerList}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\n\t\t\t\t\t<br />\n\n\t\t\t\t\t<div className=\"float-right\">\n\t\t\t\t\t\t<Button color=\"success\" tag={Link} to=\"/customers/new\">Add Customer</Button>\n\t\t\t\t\t</div>\n\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default CustomerList;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from '../AppNavbar';\n\nclass CustomerEdit extends Component {\n\n    emptyItem = {\n        name: '',\n        email: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.baseRestUrl = 'http://localhost:8085/cidr-rest';\n    }\n    \n    async componentDidMount() {\n    if (this.props.match.params.id !== 'new') {\n        const customer = await (await fetch(this.baseRestUrl + `/customers/${this.props.match.params.id}`)).json();\n        this.setState({item: customer});\n    }\n}\n\n\nhandleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let item = {...this.state.item};\n    item[name] = value;\n    this.setState({item});\n}\n\nasync handleSubmit(event) {\n    event.preventDefault();\n    const {item} = this.state;\n\n    await fetch(this.baseRestUrl + '/customers' + (item.id ? '/' + item.id : ''), {\n        method: (item.id) ? 'PUT' : 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item),\n    });\n    this.props.history.push('/customers');\n    \n}\n\n\nrender() {\n    const {item} = this.state;\n    const title = <h2>{item.id ? 'Edit Customer' : 'Add Customer'}</h2>;\n\n    return <div>\n        <AppNavbar/>\n        <Container>\n            {title}\n            <Form onSubmit={this.handleSubmit}>\n                <FormGroup>\n                    <Label for=\"name\">First Name</Label>\n                    <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={item.firstName || ''}\n                           onChange={this.handleChange} autoComplete=\"firstName\"/>\n                </FormGroup>\n                                <FormGroup>\n                    <Label for=\"name\">Last Name</Label>\n                    <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={item.lastName || ''}\n                           onChange={this.handleChange} autoComplete=\"lastName\"/>\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Input type=\"text\" name=\"email\" id=\"email\" value={item.email || ''}\n                           onChange={this.handleChange} autoComplete=\"email\"/>\n                </FormGroup>\n                                <FormGroup>\n                    <Label for=\"name\">Date Of Birth</Label>\n                    <Input type=\"text\" name=\"dateOfBirth\" id=\"dateOfBirth\" value={item.dateOfBirth || ''}\n                           onChange={this.handleChange} autoComplete=\"dateOfBirth\"/>\n                </FormGroup>\n                <p/>\n                <FormGroup>\n                    <Button color=\"primary\" type=\"submit\">Save</Button>{' '} \n                    {\" \"}\n                    <Button color=\"secondary\" tag={Link} to=\"/customers\">Cancel</Button>\n                </FormGroup>\n            </Form>\n        </Container>\n    </div>\n}\n\n\n\n\n}\nexport default withRouter(CustomerEdit);","import React, { useState, useEffect } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n\n\nimport Home from './components/Home';\n//import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n    BrowserRouter,\n    Link,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport CustomerList from './components/customer/CustomerList';\nimport CustomerEdit from \"./components/customer/CustomerEdit\";\nimport Login from './components/login/Login';\n\n\n\nfunction App() {\n\t\n\tconst [token, setToken] = useState();\n\n\t\n    async function populateCustomers ()  {\n\t\t\n    }\n    \n\n\t// Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    //populateCustomers();\n  }, []); // Add empty array to force it run only one time.  no repeat after render\n\n\t\n  //if(!token) {\n  //  return <Login setToken={setToken} />\n  //}\n  \n  return (\n    <BrowserRouter basename={process.env.REACT_APP_ROUTER_BASE || ''}>\n          <Switch>\n            <Route path='/' exact={true} component={Home}/>\n            <Route path='/customers' exact={true} component={CustomerList}/>\n            <Route path='/customers/:id' component={CustomerEdit}/>\n            \n            \n          </Switch>\n        </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}